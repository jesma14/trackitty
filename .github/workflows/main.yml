name: "CI/CD"

on:
    pull_request:
        branches:
            - '**'
    push:
        branches:
            - '**'

jobs:
    build:
        name: Build & Release
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            #1 Checkout Repository
            - name: Checkout Repository
              uses: actions/checkout@v4

            #2 Setup Java
            - name: Set Up Java
              uses: actions/setup-java@v4
              with:
                distribution: 'oracle'
                java-version: '17'

            #3 Setup Flutter
            - name: Set Up Flutter
              uses: subosito/flutter-action@v2
              with:
                flutter-version: 3.24.1
            - run: flutter --version
          
            #4 Install Dependencies
            - name: Install Dependencies
              run: flutter pub get
              working-directory: ../trackitty/trackitty_app
            
            #5 Setup Keystore
            - name: Decode Keysgittore
              run: |
                echo "${{ secrets.KEYSTORE_BASE64 }} | base 64 --decode > android/app/trackitty_release_key.keystore"

            - name: Create key.properties
              run: |
                echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
                echo "keyPassword=${{ secrets.KEY_PASSWORD }} >> android/key.properties"
                echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
                echo "storeFile=keystore.jks" >> android/key.properties
              working-directory: ../trackitty/trackitty_app

            #6 Build Andorid App Bundle (Linux and Windows)
            - name: Build Android App Bundle
              if: matrix.os == 'ubuntu-latest' || 'windows-latest'
              run: flutter build appbundle --release
              working-directory: ../trackitty/trackitty_app

            #7 Build iOS App (MacOS)
            - name: Build iOS App
              if: matrix.os == 'macos-latest'
              run: flutter build ios --release --no-codesign
              working-directory: ../trackitty/trackitty_app

            # #8 Archive iOS App (MacOS) -> create Xcode archive, bundle with all neccesary metadata
            # - name: Archive iOS App
            #   if: matrix.os == 'macos-latest'
            #   run: |
            #     xcodebuild -workspace ios/Runner.xcworkspace \
            #     -scheme Runner \
            #     -sdk iphoneos \
            #     -configuration Release \
            #     clean archive \
            #     -archivePath ${{ github.workspace }}/build/ios/Runner.xcarchive archive
            #     -destination "generic/platform=iOS"
            #   working-directory: ../trackitty/trackitty_app

             #8 Build IPA ( IOS Build )
            - name: Build IPA
              run: flutter build ipa --no-codesign

            - name: Compress Archives and IPAs
              run: |
                cd build
                tar -czf ios_build.tar.gz ios

            #9 Upload Artifacts
            - name: Upload Artifacts
              uses: actions/upload-artifact@v2
              with:
              
                name: Releases
                path: |
                  build/app/outputs/flutter-apk/app-release.apk
                  build/app/outputs/bundle/release/app-release.aab
                  build/ios_build.tar.gz

            #10 Extract Version
            - name: Extract version from pubspec.yaml
              id: extract_version
              run: |
                version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
                echo "VERSION=$version" >> $GITHUB_ENV

            #11 Check if Tag Exists
            - name: Check if Tag Exists
              id: check_tag
              run: |
                if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
                  echo "TAG_EXISTS=true" >> $GITHUB_ENV
                else
                  echo "TAG_EXISTS=false" >> $GITHUB_ENV
                fi

            #12 Modify Tag if it Exists
            - name: Modify Tag
              if: env.TAG_EXISTS == 'true'
              id: modify_tag
              run: |
                new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
                echo "VERSION=$new_version" >> $GITHUB_ENV
      
            #13 Create Release
            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz"
                tag: v${{ env.VERSION }}
                token: ${{ secrets.TOKEN }}
              