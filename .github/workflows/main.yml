name: "CI/CD"

on:
    pull_request:
        branches:
            - '**'
    push:
        branches:
            - '**'

jobs:
    build:
        name: Build & Release
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            #1 Checkout Repository
            - name: Checkout Repository
              uses: actions/checkout@v4

            #2 Setup Java
            - name: Set Up Java
              uses: actions/setup-java@v4
              with:
                distribution: 'oracle'
                java-version: '17'

            #3 Setup Flutter
            - name: Set Up Flutter
              uses: subosito/flutter-action@v2
              with:
                flutter-version: 3.24.1
            - run: flutter --version
          
            #4 Install Dependencies
            - name: Install Dependencies
              run: flutter pub get
              working-directory: ../trackitty/trackitty_app
            
            #5 Setup Keystore
            - name: Decode Keysgittore
              run: |
                echo "${{ secrets.KEYSTORE_BASE64 }} | base 64 --decode > android/app/trackitty_release_key.keystore"

            - name: Create key.properties
              run: |
                echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
                echo "keyPassword=${{ secrets.KEY_PASSWORD }} >> android/key.properties"
                echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
                echo "storeFile=keystore.jks" >> android/key.properties
              working-directory: ../trackitty/trackitty_app

            #6 Build Andorid App Bundle (Linux and Windows)
            - name: Build Android App Bundle
              if: matrix.os == 'ubuntu-latest' || 'windows-latest'
              run: flutter build appbundle --release
              working-directory: ../trackitty/trackitty_app

            #7 Build iOS App (MacOS)
            - name: Build iOS App
              if: matrix.os == 'macos-latest'
              run: flutter build ios --release --no-codesign
              working-directory: ../trackitty/trackitty_app

            #8 Archive iOS App (MacOS) -> create Xcode archive, bundle with all neccesary metadata
            - name: Archive iOS App
              if: matrix.os == 'macos-latest'
              run: |
                xcodebuild -workspace ios/Runner.xcworkspace \
                -scheme Runner \
                -sdk iphoneos \
                -configuration Release \
                clean archive \
                -archivePath ${{ github.workspace }}/build/ios/Runner.xcarchive archive
                -destination "generic/platform=iOS"
              working-directory: ../trackitty/trackitty_app
            